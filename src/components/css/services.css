/* Existing styles (leave these as they are) */
main {
  width: 100%;
  min-height: calc(100vh - 18rem);
  height: auto;
  background-color: #1A1A2E;
  display: flex;
  align-items: center;
  justify-content: center;
}

.hero {
  margin: 0 auto;
  width: 90%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  gap: 2rem;
  padding: 3rem 0;
}

.card {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding: 2rem;
  width: 200px;
  height: 250px;
  border-radius: 15px;
  gap: 1.5rem;
  background-color: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 137, 6, 0.2);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.card::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  transform: rotate(-45deg);
  transition: all 0.5s ease;
}

.card:hover::before {
  top: 100%;
  left: 100%;
}

.card:hover {
  transform: scale(1.03);
  box-shadow: 0 10px 25px rgba(242, 95, 76, 0.2);
}

.card img {
  width: 245px;          /* Make the image fill the width of the container */
  height: 200px;        /* Set a fixed height for the image */
  object-fit: cover;    /* Ensure the image covers the entire area, cropping if necessary */
  border-radius: 10px;  /* Maintain the border radius */
  transition: transform 0.3s ease; /* Keep the transition for hover effects */
}

.card:hover img {
  transform: scale(1.08) rotate(3deg);
}

.card button {
  width: 100%;
  padding: 0.8rem 2.5rem;
  font-size: 1.7rem;
  color: #ffffff;
  background-color: #ff8906;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  z-index: 1;

  /* Add these lines to maintain button height */
  display: flex;         /* Use flexbox to control content layout */
  align-items: center;   /* Vertically center the content */
  justify-content: center; /* Horizontally center the content */
  height: auto;          /* Allow the button to expand based on content */
  min-height: 3.5rem;      /* Ensure a minimum height for the button */
}

.card button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background-color: #f25f4c;
  transition: all 0.3s ease;
  z-index: -1;
}

.card button:hover {
  color: #ffffff;
}

.card button:hover::before {
  left: 0;
}

/* Responsive Flex Layout */
.hero {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 2rem;
}

.card {
  flex: 0 1 calc(33.333% - 2rem);
  min-width: 200px;
  max-width: 250px;
}

/* Additional Responsive Adjustments */
@media screen and (max-width: 768px) {
  .card {
    flex: 0 1 calc(50% - 2rem);
  }
}

@media screen and (max-width: 480px) {
  .card {
    flex: 0 1 100%;
  }
}
.card button a { /* Style the NavLink inside the button */
  display: block;      /* Make the link fill the entire button */
  width: 100%;
  height: 100%;
  text-decoration: none; /* Remove underline from the link */
  color: inherit;        /* Inherit the button's text color */
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2;           /* Ensure the link is above the button's pseudo-element */
  /* Remove the padding from here */
  box-sizing: border-box; /* Include padding in the element's total width and height */
    display: flex;         /* Use flexbox to control content layout */
  align-items: center;   /* Vertically center the content */
  justify-content: center; /* Horizontally center the content */
}

.card button {
  position: relative; /* Needed for the absolute positioning of the link */
}
